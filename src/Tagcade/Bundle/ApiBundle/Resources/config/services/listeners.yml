services:

    ## Update ad tag html before ad tag persisted
    tagcade_api.event_listener.UpdateAdTagHtmlListener:
        class: Tagcade\Bundle\ApiBundle\EventListener\UpdateAdTagHtmlListener
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }

    ## Update ad tag position, make sure its continuous
    tagcade_api.event_listener.UpdateAdTagPositionListener:
        class: Tagcade\Bundle\ApiBundle\EventListener\UpdateAdTagPositionListener
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: onFlush }

    ## Update library ad tag position, make sure its continuous
    tagcade_api.event_listener.UpdateLibraryAdTagPositionListener:
        class: Tagcade\Bundle\ApiBundle\EventListener\UpdateLibrarySlotTagPositionListener
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: onFlush }

#    ## Update ad slot variableDescriptor, make sure auto update for expressions field
#    tagcade_api.event_listener.UpdateAdSlotExpressionListener:
#        class: Tagcade\Bundle\ApiBundle\EventListener\UpdateAdSlotExpressionListener
#        tags:
#            - { name: doctrine.event_listener, event: prePersist }
#            - { name: doctrine.event_listener, event: preUpdate }

    ## Update expression in js, for tagcache latter
    tagcade_api.event_listener.UpdateExpressionInJstListener:
        class: Tagcade\Bundle\ApiBundle\EventListener\UpdateExpressionInJsListener
        tags:
            - { name: doctrine.event_listener, event: prePersist }
#            - { name: doctrine.event_listener, event: preUpdate }

    tagcade_api.event_listener.MoveAdTagToLibraryListener:
        class: Tagcade\Bundle\ApiBundle\EventListener\MoveAdTagToLibraryListener
        tags:
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postFlush }