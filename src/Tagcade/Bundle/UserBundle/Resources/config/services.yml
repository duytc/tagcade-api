parameters:
    tagcade.bundle.user.entity.user.class: Tagcade\Bundle\UserBundle\Entity\User
    # event dispatched on login success
    tagcade_user.events.login_success: tagcade_user.events.login_success

services:
    tagcade.factory.user_role:
        class: Tagcade\Factory\UserRoleFactory

    # returns our role model class for the current authenticated user entity
    tagcade.user_role:
        class: Tagcade\Model\User\Role\UserRoleInterface
        factory_service: tagcade.factory.user_role
        factory_method: getRole
        arguments: ["@=service('security.context').getToken() != null ? service('security.context').getToken().getUser() : null"]

    tagcade_user.domain_manager.user:
        class: Tagcade\Bundle\UserBundle\DomainManager\UserManager
        arguments:
            - @fos_user.user_manager

    tagcade_user.handler.authentication_success:
        class: Tagcade\Bundle\UserBundle\Handler\AuthenticationSuccessHandler
        arguments:
            - @lexik_jwt_authentication.handler.authentication_success
        calls:
            - [setEventDispatcher, ["@event_dispatcher"]]
            - [setSuccessEventName, ["%tagcade_user.events.login_success%"]]

