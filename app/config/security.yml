security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Tagcade\Bundle\UserBundle\Entity\User:
            algorithm: bcrypt
            cost:      15

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        my_chain_provider:
            chain:
                providers: [in_memory, fos_userbundle]

        fos_userbundle:
            id: fos_user.user_provider.username

        in_memory:
            memory:
                users:
                    user:
                        password: userpass,
                        roles: ['ROLE_USER']
                    admin:
                        password: adminpass
                        roles: ['ROLE_SUPER_ADMIN']

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        gettoken:
            pattern:  ^/api/getToken$
            stateless: true
            gfreeau_get_jwt:
                # this is the default config
                username_parameter: username
                password_parameter: password
                post_only: true
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # protected firewall, where a user will be authenticated by its jwt token
        api:
            pattern:   ^/api
            stateless: true
            # default configuration
            lexik_jwt: ~ # check token in Authorization Header, with a value prefix of e:    bearer

    access_control:
        - { path: ^/api/getToken$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: ROLE_USER }